[circus]
check_delay = 5
endpoint = ${options['endpoint']}
pubsub_endpoint = ${options['pubsub_endpoint']}
umask = 002
logoutput = ${parts.buildout.directory}/var/log/circus.log
statsd = ${options['statsd']}

[env]
TZ = ${options['timezone']}
{% if 'sandbox_mode' in options %}
SANDBOX_MODE = true
{% end %}

{% if options['medicines_registry'] %}
[watcher:medicines_registry]
cmd = ${parts.buildout.directory}/bin/medicines_registry
numprocesses = ${options['numprocesses'] if 'numprocesses' in options else '1'}
use_sockets = True
priority = 90
args = ${parts.buildout.directory}/etc/openprocurement.medicines.registry.ini
shell = True
copy_env = True
stdout_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/medicines_registry.stdout.log
stdout_stream.max_bytes = 134217728
stdout_stream.backup_count = 1
stderr_stream.class = FileStream
stderr_stream.filename = ${parts.buildout.directory}/var/log/medicines_registry.stderr.log
stderr_stream.max_bytes = 134217728
stderr_stream.backup_count = 1

[watcher:medicines_registry_webapp]
cmd = ${parts.buildout.directory}/bin/chaussette --fd $(circus.sockets.medicines_registry_web) --backend=gevent paste:${parts['openprocurement.medicines.registry.ini'].output} --graceful-timeout=${options['graceful_timeout'] if 'graceful_timeout' in options else '60'}
numprocesses = ${options['numprocesses'] if 'numprocesses' in options else '1'}
use_sockets = True
priority = 90
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/medicines_registry.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/medicines_registry.stderr.log

[socket:medicines_registry_web]
host = ${options['web_host']}
port = ${options['web_port']}

[plugin:medicines_registry_webapp_resource]
use = circus.plugins.resource_watcher.ResourceWatcher
watcher = webapp
max_cpu = 95
max_mem = 400M
{% end %}

{% if 'redis' in options and options['redis'] %}
[watcher:redis]
cmd = redis-server
args = ${parts.buildout.directory}/etc/redis.cfg
priority = 100
stdout_stream.class = FileStream
stderr_stream.class = FileStream
stdout_stream.filename = ${parts.buildout.directory}/var/log/redis.stdout.log
stderr_stream.filename = ${parts.buildout.directory}/var/log/redis.stderr.log

[env:redis]
PATH = /usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:$$PATH
{% end %}